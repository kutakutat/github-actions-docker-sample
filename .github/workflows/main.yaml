name: ci

on:
  push:
    branches:
      - 'main'
      - 'develop'
  # 手動実行の設定。パイプラインで使用する値の指定もできる
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # default time out が 6 時間なので設定
    timeout-minutes: 5
    # ステップの出力をジョブの出力にマップ
    outputs:
      status: ${{ steps.result.outputs.status }}
    steps:
      - name: Show Payload
        run: cat $GITHUB_EVENT_PATH
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          # TODO 環境も加味した Tag 付のベストプラクティスを検討する
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/githubactionsdokcersample:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache,mode=max
      - name: Record Job Status
        id: result
        run: echo "::set-output name=status::${{ job.status }}"
  runOnMainBranch:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 5
    steps:
      - name: This Job runs only on main branch
        run: echo "This job runs only on $GITHUB_REF"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 5
    outputs:
      status: ${{ steps.result.outputs.status }}
    steps:
      - name: Get Image From Registory
        run: echo "got the Image From Registory"
      - name: Deploy
        run: echo "deploy"
      - name: Record Job Status
        id: result
        run: echo "::set-output name=status::${{ job.status }}"
  notify:
    if: always()
    runs-on: ubuntu-latest
    needs: deploy
    timeout-minutes: 5
    steps:
      - name: notify
        run: echo "deploy"
      - name: show outputs across jobs
        run: |
          echo "Build Job Status : ${{jobs.build.outputs.status}}"
          echo "Deploy Job Status : ${{needs.deploy.outputs.status}}"
          
